name: DNS Resolver

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *'  # 每6小时运行一次

jobs:
  resolve-dns:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      # 使用默认值作为回退
      DOMAIN_LIST: ${{ vars.DOMAIN_LIST || 'google.com github.com example.com' }}
      OUTPUT_DIR: ${{ vars.OUTPUT_DIR || 'ip_records' }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup environment
      run: |
        mkdir -p $OUTPUT_DIR
        temp_dir=$(mktemp -d)
        echo "TEMP_DIR=$temp_dir" >> $GITHUB_ENV
        
        # 调试输出：显示实际使用的域名列表
        echo "Using DOMAIN_LIST: $DOMAIN_LIST"

    - name: Resolve domains and generate IP files
      run: |
        : > $TEMP_DIR/all_ips.txt
        
        # 处理带空格的域名列表
        IFS=' ' read -ra domains <<< "$DOMAIN_LIST"
        for domain in "${domains[@]}"; do
          clean_domain=$(echo "$domain" | tr -d '[:space:]')
          echo "Resolving: $clean_domain"
          
          ips=$(dig +short $clean_domain @8.8.8.8 @1.1.1.1 | grep -E '^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$' | sort -u)
          
          if [ -n "$ips" ]; then
            echo "$ips" > "$TEMP_DIR/${clean_domain}.txt"
            echo "$ips" >> $TEMP_DIR/all_ips.txt
            echo "Resolved $clean_domain to:"
            echo "$ips"
          else
            echo "无法解析 $clean_domain" > "$TEMP_DIR/${clean_domain}.txt"
            echo "Warning: Failed to resolve $clean_domain"
          fi
        done

        sort -u $TEMP_DIR/all_ips.txt -o $TEMP_DIR/all_ips.txt

    - name: Update files
      run: |
        rm -rf $OUTPUT_DIR/*
        mv $TEMP_DIR/* $OUTPUT_DIR/
        rm -rf $TEMP_DIR
        
        # 列出生成的文件
        echo "Generated files:"
        ls -l $OUTPUT_DIR

    - name: Commit and push changes
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git add $OUTPUT_DIR/
        
        # 仅当有变化时提交
        if git diff-index --quiet HEAD; then
          echo "No changes to commit"
        else
          git commit -m "Update DNS records: $(date +'%Y-%m-%d %T')"
          git push
        fi
